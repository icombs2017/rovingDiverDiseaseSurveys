rd$Location= if_else(rd$SiteCode %in% c("SEFL01", "SEFL02", "SEFL03", "SLR South", "SLR Central", "SLR Ledge", "SLR North"), "SLR",
if_else(rd$SiteCode %in% c("T328", "BC1", "FTL4"), "PMP",
if_else(rd$SiteCode %in% c("SEFL04", "SEFL05", "SEFL06"), "JUP",
if_else(rd$SiteCode %in% c("SEFL08", "SEFL09", "SEFL10", "SEFL11", "SEFL12"), "WPB", ""))))
head(rd)
rd$TotalObservations <- rd$UK + rd$DS + rd$BB + rd$RB + rd$YB + rd$TLD + rd$WP + rd$WS + rd$P + rd$PB + rd$BL + rd$TotalHealthy
head(rd)
rd.early <- filter(rd, Date < "2019-07-03") %>%
subset(SiteCode %in% c("SEFL01", "SEFL02", "SEFL04", "SEFL05", "SEFL06", "SEFL08", "SEFL11", "SEFL12", "SLR North", "SLR South", "SLR Central", "SLR Ledge", "BC1", "T328", "FTL4"))
head(rd.early)
tail(rd.early)
rd.early <- filter(rd, Date < "2019-07-03") %>%
subset(SiteCode %in% c("SEFL01", "SEFL02", "SEFL04", "SEFL05", "SEFL06", "SEFL08", "SEFL11", "SEFL12", "SLR North", "SLR South", "SLR Central", "SLR Ledge", "BC1", "T328", "FTL4"))
head(rd.early$Date)
tail(rd.early$Date)
countyData <- rd.early %>% dplyr::select(c(SiteCode, County, MonthYear, SpeciesCode, TLD, TotalObservations)) %>% group_by(SiteCode,MonthYear,County) %>% summarise_if(is.integer, sum)
countyData
countyData$Prevalence = countyData$TLD/countyData$TotalObservations
head(countyData)
set.seed(999)
adonis(formula = Prevalence ~ County*MonthYear, data = countyData, method = "euclidian")
set.seed(999)
pairwise.adonis(countyData[c(6)],factors=countyData$County,
sim.method='euclidian',p.adjust.m='bonferroni', perm = 999)
martin <- subset(countyData, County == "Martin")
class(martin$MonthYear)
martin$MonthYear <- as.factor(martin$MonthYear)
levels(martin$MonthYear)
martin$MonthYear = factor(martin$MonthYear, levels(martin$MonthYear)[c(4, 1, 2, 3)])
levels(martin$MonthYear)
levels(martin$SiteCode)[levels(martin$SiteCode) == "SEFL01"] <- "SLR Central"
levels(martin$SiteCode)[levels(martin$SiteCode) == "SEFL02"] <- "SLR South"
levels(martin$SiteCode)
palm <- subset(countyData, County == "Palm Beach")
class(palm$MonthYear)
palm$MonthYear <- as.factor(palm$MonthYear)
levels(palm$MonthYear)
palm$MonthYear = factor(palm$MonthYear, levels(palm$MonthYear)[c(9, 3, 4, 6, 8, 10, 1, 2, 5, 7)])
levels(palm$MonthYear)
broward <- subset(countyData, County == "Broward")
class(broward$MonthYear)
broward$MonthYear <- as.factor(broward$MonthYear)
levels(broward$MonthYear)
broward$MonthYear = factor(broward$MonthYear, levels(broward$MonthYear)[c(4,5,1,2,3)])
levels(broward$MonthYear)
martin.prev.plot1 <-
ggplot(martin, aes(x=MonthYear, y=Prevalence, color = SiteCode, group = SiteCode, label=SiteCode))+
geom_line(size = 1)+
geom_point(size = 2)+
labs(y = "Prevalence")+
annotate("label", x = 2.45, y = 0.45, label = paste ("Martin County"), size = 5)+
scale_x_discrete(limits = c("11-17","12-17","01-18", "04-18", "05-18", "06-18", "08-18", "11-18", "12-18", "02-19", "03-19", "04-19", "05-19", "06-19"), labels = c("Nov 17","Dec 17","Jan 18", "Apr 18", "May 18", "Jun 18", "Aug 18", "Nov 18", "Dec 18", "Feb 19", "Mar 19", "Apr 19", "May 19", "Jun 19"))+
ylim(0,0.5)
# takes the legend and saves it as a separate object (grob)
get_legend<-function(martin.prev.plot1){
tmp <- ggplot_gtable(ggplot_build(martin.prev.plot1))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
martin.legend <- tmp$grobs[[leg]]
return(martin.legend)
}
martin.legend=get_legend(martin.prev.plot1)
martin.prev.plot <- martin.prev.plot1 +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(hjust = 0.5),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=15, color="black"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_text(size=12, color="black")
)
#martin.prev.plot <- martin.prev.plot + rremove("legend")
martin.prev.plot
martin.prev.plot1 <-
ggplot(martin, aes(x=MonthYear, y=Prevalence, color = SiteCode, group = SiteCode, label=SiteCode))+
geom_line(size = 1)+
geom_point(size = 2)+
labs(y = "Prevalence")+
annotate("label", x = 2.45, y = 0.45, label = paste ("Martin County"), size = 5)+
scale_x_discrete(limits = c("11-17","12-17","01-18", "04-18", "05-18", "06-18", "08-18", "11-18", "12-18", "02-19", "03-19", "04-19", "05-19", "06-19"), labels = c("Nov 17","Dec 17","Jan 18", "Apr 18", "May 18", "Jun 18", "Aug 18", "Nov 18", "Dec 18", "Feb 19", "Mar 19", "Apr 19", "May 19", "Jun 19"))+
labs(fill = "Site")
ylim(0,0.5)
martin.prev.plot1
martin.prev.plot1 <-
ggplot(martin, aes(x=MonthYear, y=Prevalence, color = SiteCode, group = SiteCode, label=SiteCode))+
geom_line(size = 1)+
geom_point(size = 2)+
labs(y = "Prevalence")+
annotate("label", x = 2.45, y = 0.45, label = paste ("Martin County"), size = 5)+
scale_x_discrete(limits = c("11-17","12-17","01-18", "04-18", "05-18", "06-18", "08-18", "11-18", "12-18", "02-19", "03-19", "04-19", "05-19", "06-19"), labels = c("Nov 17","Dec 17","Jan 18", "Apr 18", "May 18", "Jun 18", "Aug 18", "Nov 18", "Dec 18", "Feb 19", "Mar 19", "Apr 19", "May 19", "Jun 19"))+
labs(fill = "Site")+
ylim(0,0.5)
# takes the legend and saves it as a separate object (grob)
get_legend<-function(martin.prev.plot1){
tmp <- ggplot_gtable(ggplot_build(martin.prev.plot1))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
martin.legend <- tmp$grobs[[leg]]
return(martin.legend)
}
martin.legend=get_legend(martin.prev.plot1)
martin.prev.plot <- martin.prev.plot1 +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(hjust = 0.5),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=15, color="black"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_text(size=12, color="black")
)
#martin.prev.plot <- martin.prev.plot + rremove("legend")
martin.prev.plot
martin.prev.plot1 <-
ggplot(martin, aes(x=MonthYear, y=Prevalence, color = SiteCode, group = SiteCode, label=SiteCode))+
geom_line(size = 1)+
geom_point(size = 2)+
labs(y = "Prevalence")+
annotate("label", x = 2.45, y = 0.45, label = paste ("Martin County"), size = 5)+
scale_x_discrete(limits = c("11-17","12-17","01-18", "04-18", "05-18", "06-18", "08-18", "11-18", "12-18", "02-19", "03-19", "04-19", "05-19", "06-19"), labels = c("Nov 17","Dec 17","Jan 18", "Apr 18", "May 18", "Jun 18", "Aug 18", "Nov 18", "Dec 18", "Feb 19", "Mar 19", "Apr 19", "May 19", "Jun 19"))+
labs(color = "Site")+
ylim(0,0.5)
# takes the legend and saves it as a separate object (grob)
get_legend<-function(martin.prev.plot1){
tmp <- ggplot_gtable(ggplot_build(martin.prev.plot1))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
martin.legend <- tmp$grobs[[leg]]
return(martin.legend)
}
martin.legend=get_legend(martin.prev.plot1)
martin.prev.plot <- martin.prev.plot1 +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(hjust = 0.5),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=15, color="black"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_text(size=12, color="black")
)
#martin.prev.plot <- martin.prev.plot + rremove("legend")
martin.prev.plot
```{r, martin plot, include = TRUE, fig.width = 12, fig.height = 8}
martin.prev.plot1 <-
ggplot(martin, aes(x=MonthYear, y=Prevalence, color = SiteCode, group = SiteCode, label=SiteCode))+
geom_line(size = 1)+
geom_point(size = 2)+
labs(y = "Prevalence")+
annotate("label", x = 2.45, y = 0.45, label = paste ("Martin County"), size = 5)+
scale_x_discrete(limits = c("11-17","12-17","01-18", "04-18", "05-18", "06-18", "08-18", "11-18", "12-18", "02-19", "03-19", "04-19", "05-19", "06-19"), labels = c("Nov 17","Dec 17","Jan 18", "Apr 18", "May 18", "Jun 18", "Aug 18", "Nov 18", "Dec 18", "Feb 19", "Mar 19", "Apr 19", "May 19", "Jun 19"))+
labs(color = "Site")+
ylim(0,0.5)
# takes the legend and saves it as a separate object (grob)
get_legend<-function(martin.prev.plot1){
tmp <- ggplot_gtable(ggplot_build(martin.prev.plot1))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
martin.legend <- tmp$grobs[[leg]]
return(martin.legend)
}
martin.legend=get_legend(martin.prev.plot1)
martin.prev.plot <- martin.prev.plot1 +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(hjust = 0.5),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=15, color="black"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_text(size=12, color="black")
)
#martin.prev.plot <- martin.prev.plot + rremove("legend")
martin.prev.plot
palm.prev.plot1 <-
ggplot(palm, aes(x=MonthYear, y=Prevalence, color = SiteCode, group = SiteCode, label = SiteCode))+
geom_line()+
geom_point()+
annotate("label", x = 2.45, y = 0.45, label = paste ("Palm Beach County"), size = 5)+
scale_x_discrete(limits = c("11-17","12-17","01-18", "04-18", "05-18", "06-18", "08-18", "11-18", "12-18", "02-19", "03-19", "04-19", "05-19", "06-19"), labels = c("Nov 17","Dec 17","Jan 18", "Apr 18", "May 18", "Jun 18", "Aug 18", "Nov 18", "Dec 18", "Feb 19", "Mar 19", "Apr 19", "May 19", "Jun 19"))+
labs(color = "Site")+
ylim(0,0.5)
# takes the legend and saves it as a separate object (grob)
legend<-function(palm.prev.plot1){
tmp <- ggplot_gtable(ggplot_build(palm.prev.plot1))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
martin.legend <- tmp$grobs[[leg]]
return(palm.legend)
}
palm.legend=get_legend(palm.prev.plot1)
palm.prev.plot <- palm.prev.plot1+
theme(panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(hjust = 0.5),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=15, color="black"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_text(size=12, color="black")
)
#palm.prev.plot <- palm.prev.plot + rremove("legend")
palm.prev.plot
broward.prev.plot1 <-
ggplot(broward, aes(x=MonthYear, y=Prevalence, color = SiteCode, group = SiteCode, label = SiteCode))+
geom_line()+
geom_point()+
#geom_boxplot()+
scale_x_discrete(limits = c("11-17","12-17","01-18", "04-18", "05-18", "06-18", "08-18", "11-18", "12-18", "02-19", "03-19", "04-19", "05-19", "06-19"), labels = c("Nov 17","Dec 17","Jan 18", "Apr 18", "May 18", "Jun 18", "Aug 18", "Nov 18", "Dec 18", "Feb 19", "Mar 19", "Apr 19", "May 19", "Jun 19"))+
ylim(0,0.5)+
annotate("label", x = 2.45, y = 0.45, label = paste ("Broward County"), size = 5) +
labs(y = "Prevalence", x = "Month", color = "Site")
legend<-function(broward.prev.plot1){
tmp <- ggplot_gtable(ggplot_build(broward.prev.plot1))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
martin.legend <- tmp$grobs[[leg]]
return(broward.legend)
}
broward.legend=get_legend(broward.prev.plot1)
broward.prev.plot <- broward.prev.plot1+
theme(panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(hjust = 0.5),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=15, color="black"),
axis.text.x=element_text(angle = 45, hjust = 1,size=12, color="black"),
axis.text.y=element_text(size=12, color="black")
)
#broward.prev.plot <- broward.prev.plot + rremove("legend")
broward.prev.plot
stacked.plot <- (martin.prev.plot / palm.prev.plot / broward.prev.plot)
ggsave("../figures/site.prevalence.png", plot= stacked.plot, width=12, height=8, units="in", dpi=600)
stacked.plot
rd <- read.xls("../data/RovingDiverSurveys_AMC.xlsx", head = T, na.strings ="TMTC")
class(rd$TotalHealthy)
head(rd)
class(rd$Healthy)
head(rd)
rd$MonthYear = format(as.Date(as.Date(rd$Date), format = "%y/%m/%d"), "%m-%y")
rd$Date = as.Date(rd$Date)
head(rd)
class(rd$Date)
head(rd)
rd$County = if_else(rd$SiteCode %in% c("SEFL01", "SEFL02", "SEFL 03", "SLR South", "SLR Central", "SLR Ledge", "SLR North"), "Martin",
if_else(rd$SiteCode %in% c("T328", "BC1", "FTL4"), "Broward", "Palm Beach"))
rd$Location= if_else(rd$SiteCode %in% c("SEFL01", "SEFL02", "SEFL03", "SLR South", "SLR Central", "SLR Ledge", "SLR North"), "SLR",
if_else(rd$SiteCode %in% c("T328", "BC1", "FTL4"), "PMP",
if_else(rd$SiteCode %in% c("SEFL04", "SEFL05", "SEFL06"), "JUP",
if_else(rd$SiteCode %in% c("SEFL08", "SEFL09", "SEFL10", "SEFL11", "SEFL12"), "WPB", ""))))
head(rd)
rd$TotalObservations <- rd$UK + rd$DS + rd$BB + rd$RB + rd$YB + rd$TLD + rd$WP + rd$WS + rd$P + rd$PB + rd$BL + rd$Healthy
rd$TotalObservations <- rd$UK + rd$DS + rd$BB + rd$RB + rd$YB + rd$TLD + rd$WP + rd$WS + rd$P + rd$PB + rd$BL + rd$Healthy
rd$TotalObservations <- rd$UK + rd$DS + rd$BB + rd$RB + rd$YB + rd$STLD + rd$WP + rd$WS + rd$P + rd$PB + rd$BL + rd$Healthy
rd$TotalObservations <- rd$UK + rd$DS + rd$BB + rd$RB + rd$YB + rd$SCTLD + rd$WP + rd$WS + rd$P + rd$PB + rd$BL + rd$Healthy
head(rd)
rd.early <- filter(rd, Date < "2019-07-03") %>%
subset(SiteCode %in% c("SEFL01", "SEFL02", "SEFL04", "SEFL05", "SEFL06", "SEFL08", "SEFL11", "SEFL12", "SLR North", "SLR South", "SLR Central", "SLR Ledge", "BC1", "T328", "FTL4"))
head(rd.early)
tail(rd.early)
countyData <- rd.early %>% dplyr::select(c(SiteCode, County, MonthYear, SpeciesCode, TLD, TotalObservations)) %>% group_by(SiteCode,MonthYear,County) %>% summarise_if(is.integer, sum)
countyData <- rd.early %>% dplyr::select(c(SiteCode, County, MonthYear, SpeciesCode, SCTLD, TotalObservations)) %>% group_by(SiteCode,MonthYear,County) %>% summarise_if(is.integer, sum)
countyData
countyData$Prevalence = countyData$SCTLD/countyData$TotalObservations
head(countyData)
set.seed(999)
adonis(formula = Prevalence ~ County*MonthYear, data = countyData, method = "euclidian")
set.seed(999)
pairwise.adonis(countyData[c(6)],factors=countyData$County,
sim.method='euclidian',p.adjust.m='bonferroni', perm = 999)
martin <- subset(countyData, County == "Martin")
class(martin$MonthYear)
martin$MonthYear <- as.factor(martin$MonthYear)
levels(martin$MonthYear)
martin$MonthYear = factor(martin$MonthYear, levels(martin$MonthYear)[c(4, 1, 2, 3)])
levels(martin$MonthYear)
levels(martin$SiteCode)[levels(martin$SiteCode) == "SEFL01"] <- "SLR Central"
levels(martin$SiteCode)[levels(martin$SiteCode) == "SEFL02"] <- "SLR South"
levels(martin$SiteCode)
palm <- subset(countyData, County == "Palm Beach")
class(palm$MonthYear)
palm$MonthYear <- as.factor(palm$MonthYear)
levels(palm$MonthYear)
palm$MonthYear = factor(palm$MonthYear, levels(palm$MonthYear)[c(9, 3, 4, 6, 8, 10, 1, 2, 5, 7)])
levels(palm$MonthYear)
broward <- subset(countyData, County == "Broward")
class(broward$MonthYear)
broward$MonthYear <- as.factor(broward$MonthYear)
levels(broward$MonthYear)
broward$MonthYear = factor(broward$MonthYear, levels(broward$MonthYear)[c(4,5,1,2,3)])
levels(broward$MonthYear)
martin.prev.plot1 <-
ggplot(martin, aes(x=MonthYear, y=Prevalence, color = SiteCode, group = SiteCode, label=SiteCode))+
geom_line(size = 1)+
geom_point(size = 2)+
labs(y = "Prevalence")+
annotate("label", x = 2.45, y = 0.45, label = paste ("Martin County"), size = 5)+
scale_x_discrete(limits = c("11-17","12-17","01-18", "04-18", "05-18", "06-18", "08-18", "11-18", "12-18", "02-19", "03-19", "04-19", "05-19", "06-19"), labels = c("Nov 17","Dec 17","Jan 18", "Apr 18", "May 18", "Jun 18", "Aug 18", "Nov 18", "Dec 18", "Feb 19", "Mar 19", "Apr 19", "May 19", "Jun 19"))+
labs(color = "Site")+
ylim(0,0.5)
# takes the legend and saves it as a separate object (grob)
get_legend<-function(martin.prev.plot1){
tmp <- ggplot_gtable(ggplot_build(martin.prev.plot1))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
martin.legend <- tmp$grobs[[leg]]
return(martin.legend)
}
martin.legend=get_legend(martin.prev.plot1)
martin.prev.plot <- martin.prev.plot1 +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(hjust = 0.5),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=15, color="black"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_text(size=12, color="black")
)
martin.prev.plot
palm.prev.plot1 <-
ggplot(palm, aes(x=MonthYear, y=Prevalence, color = SiteCode, group = SiteCode, label = SiteCode))+
geom_line()+
geom_point()+
annotate("label", x = 2.45, y = 0.45, label = paste ("Palm Beach County"), size = 5)+
scale_x_discrete(limits = c("11-17","12-17","01-18", "04-18", "05-18", "06-18", "08-18", "11-18", "12-18", "02-19", "03-19", "04-19", "05-19", "06-19"), labels = c("Nov 17","Dec 17","Jan 18", "Apr 18", "May 18", "Jun 18", "Aug 18", "Nov 18", "Dec 18", "Feb 19", "Mar 19", "Apr 19", "May 19", "Jun 19"))+
labs(color = "Site")+
ylim(0,0.5)
# takes the legend and saves it as a separate object (grob)
legend<-function(palm.prev.plot1){
tmp <- ggplot_gtable(ggplot_build(palm.prev.plot1))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
martin.legend <- tmp$grobs[[leg]]
return(palm.legend)
}
palm.legend=get_legend(palm.prev.plot1)
palm.prev.plot <- palm.prev.plot1+
theme(panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(hjust = 0.5),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=15, color="black"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_text(size=12, color="black")
)
palm.prev.plot
broward.prev.plot1 <-
ggplot(broward, aes(x=MonthYear, y=Prevalence, color = SiteCode, group = SiteCode, label = SiteCode))+
geom_line()+
geom_point()+
scale_x_discrete(limits = c("11-17","12-17","01-18", "04-18", "05-18", "06-18", "08-18", "11-18", "12-18", "02-19", "03-19", "04-19", "05-19", "06-19"), labels = c("Nov 17","Dec 17","Jan 18", "Apr 18", "May 18", "Jun 18", "Aug 18", "Nov 18", "Dec 18", "Feb 19", "Mar 19", "Apr 19", "May 19", "Jun 19"))+
ylim(0,0.5)+
annotate("label", x = 2.45, y = 0.45, label = paste ("Broward County"), size = 5) +
labs(y = "Prevalence", x = "Month", color = "Site")
legend<-function(broward.prev.plot1){
tmp <- ggplot_gtable(ggplot_build(broward.prev.plot1))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
martin.legend <- tmp$grobs[[leg]]
return(broward.legend)
}
broward.legend=get_legend(broward.prev.plot1)
broward.prev.plot <- broward.prev.plot1+
theme(panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(hjust = 0.5),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=15, color="black"),
axis.text.x=element_text(angle = 45, hjust = 1,size=12, color="black"),
axis.text.y=element_text(size=12, color="black")
)
broward.prev.plot
stacked.plot <- (martin.prev.plot / palm.prev.plot / broward.prev.plot)
ggsave("../figures/site.prevalence.png", plot= stacked.plot, width=12, height=8, units="in", dpi=600)
stacked.plot
?kruskal.test
kruskal.test(Ozone ~ Month, data = airquality)
install.packages(swirl)
install.packages("swirl")
library(swirl)
getRversion()
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, stringr, gridExtra, ggpubr, Rmisc, FSA, rcompanion, RColorBrewer, dplyr, vegan, nparcomp, RVAideMemoire, MANOVA.RM, pairwiseAdonis, PMCMR, PMCMRplus, patchwork, plyr, gdata)
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
rd <- read.xls("../data/RovingDiverSurveys.xlsx", head = T, na.strings ="TMTC")
class(rd$Healthy)
head(rd)
rd$MonthYear = format(as.Date(as.Date(rd$Date), format = "%y/%m/%d"), "%m-%y")
rd$Date = as.Date(rd$Date)
class(rd$Date)
head(rd)
rd$County = if_else(rd$SiteCode %in% c("SEFL01", "SEFL02", "SEFL 03", "SLR South", "SLR Central", "SLR Ledge", "SLR North"), "Martin",
if_else(rd$SiteCode %in% c("T328", "BC1", "FTL4"), "Broward", "Palm Beach"))
rd$Location= if_else(rd$SiteCode %in% c("SEFL01", "SEFL02", "SEFL03", "SLR South", "SLR Central", "SLR Ledge", "SLR North"), "SLR",
if_else(rd$SiteCode %in% c("T328", "BC1", "FTL4"), "PMP",
if_else(rd$SiteCode %in% c("SEFL04", "SEFL05", "SEFL06"), "JUP",
if_else(rd$SiteCode %in% c("SEFL08", "SEFL09", "SEFL10", "SEFL11", "SEFL12"), "WPB", ""))))
head(rd)
rd$TotalObservations <- rd$UK + rd$DS + rd$BB + rd$RB + rd$YB + rd$SCTLD + rd$WP + rd$WS + rd$P + rd$PB + rd$BL + rd$Healthy
head(rd)
rd$ThermalStress <- rd$P + rd$PB + rd$BL
head(rd)
rd.late <- filter(rd, Date > "2019-06-21") %>%
#changed to rd.late  and filtered for dates JUly 2019-May2020
#changed the '<' to a '>"
# put the date before the date that you need
subset(SiteCode %in% c("SEFL01", "SEFL02", "SEFL04", "SEFL05", "SEFL06", "SEFL08", "SEFL11", "SEFL12", "SLR North", "SLR South", "SLR Central", "SLR Ledge", "BC1", "T328", "FTL4"))
head(rd.late)
tail(rd.late)
Location <- rd.late %>% dplyr::select(c(Location, Date, SpeciesCode, UK, DS, BB, RB, YB, WP, WS, ThermalStress, SCTLD, Healthy, TotalObservations)) %>% group_by(Date,Location) %>%
summarise_if(is.integer, sum)
# LEFT OFF AT TRYING TO EXCLUDE ZEROS FROM SHOWING
#I do not want site code included, I only want to group by location, so I excluded site code
#include healthy count
# I  put mine as date, so I can see the full date
Location
Location$SCTLDPrevalence = Location$SCTLD/Location$TotalObservations
Location$UKPrevalence = Location$UK/Location$TotalObservations
Location$BBPrevalence = Location$BB/Location$TotalObservations
Location$RBPrevalence = Location$RB/Location$TotalObservations
Location$YBPrevalence = Location$YB/Location$TotalObservations
Location$WPPrevalence = Location$WP/Location$TotalObservations
Location$ThermalStressPrevalence = Location$ThermalStress/Location$TotalObservations
Location
Ordered<-Location %>% dplyr::select(c(Date,Location,TotalObservations, SCTLD, SCTLDPrevalence,UK, UKPrevalence, BB, BBPrevalence, RB, RBPrevalence, YB, YBPrevalence, WP,WPPrevalence,ThermalStress,ThermalStressPrevalence))
Ordered
Prevalence<- Ordered[, colSums(Ordered !=0)>0]
Prevalence
Species<- rd.late %>% dplyr::select(c(Location, Date, SpeciesCode, UK, DS, BB, RB, YB, WP, WS, ThermalStress, SCTLD, Healthy, TotalObservations)) %>% group_by(Date,Location,SpeciesCode) %>% summarise_all(funs(sum))
Species
Species<- rd.late %>% dplyr::select(c(Location, Date, SpeciesCode, UK, DS, BB, RB, YB, WP, WS, ThermalStress, SCTLD, Healthy, TotalObservations)) %>% group_by(Date,Location,SpeciesCode) %>% summarise_if(is.integer, sum)
Species
Species$SpeciesName = if_else(Species$SpeciesCode %in% c("AAGA"), "Agaricia.agaricites", if_else(Species$SpeciesCode %in% c("ACER"), "Acropora.cervicornis", if_else(Species$SpeciesCode %in% c("AFRA"), "Agaricia.fragilis", if_else(Species$SpeciesCode %in% c("ALAM"), "Agaricia.larcki",if_else(Species$SpeciesCode %in% c("CNAT"), "Colpophyllia.natans", if_else(Species$SpeciesCode %in% c("DSLAB"),"Diploria.labyrinthiformis", if_else(Species$SpeciesCode %in% c("DSTO"), "Dichocoenia.stokesi",if_else(Species$SpeciesCode %in% c("EFAS"), "Eusmilia.fastigiata", if_else(Species$SpeciesCode %in% c("FFRA"), "Favia.fragum", if_else(Species$SpeciesCode %in% c("HCUC"), "Helioseris.cucullata", if_else(Species$SpeciesCode %in% c("ISIN"), "Isophyllia.sinuosa", if_else(Species$SpeciesCode %in% c("MALC"), "Millepora.alcicornis", if_else(Species$SpeciesCode %in% c("MALI"), "Mycetophyllia.aliciae", if_else(Species$SpeciesCode %in% c("MANG"), "Mussa.angulosa", if_else(Species$SpeciesCode %in% c("MAUR"), "Madracis.auretenra", if_else(Species$SpeciesCode %in% c("MCAV"), "Montastrea.cavernosa", if_else(Species$SpeciesCode %in% c("MDAN"), "Mycetophylli.adanaana", if_else(Species$SpeciesCode %in% c("MDEC"), "Madracis.decactis", if_else(Species$SpeciesCode %in% c("MMEA"), "Meandrina.meandrites", if_else(Species$SpeciesCode %in% c("MFER"), "Mycetophyllia.ferox", if_else(Species$SpeciesCode %in% c("MFOR"), "Madracis.formosa",if_else(Species$SpeciesCode %in% c("MLAM"), "Mycetophyllia.lamarckiana", if_else(Species$SpeciesCode %in% c("MMEA"), "Meandrina.meandrites", if_else(Species$SpeciesCode %in% c("MPHA"), "Madracis.pharensis", if_else(Species$SpeciesCode %in% c("OANN"), "Orbicella.annularis", if_else(Species$SpeciesCode %in% c("ODIF"), "Oculina.diffusa", if_else(Species$SpeciesCode %in% c("OFAV"), "Orbicella.faveolata", if_else(Species$SpeciesCode %in% c("OFRA"), "Orbicella.franksi", if_else(Species$SpeciesCode %in% c("OVAR"), "Oculina.varicosa", if_else(Species$SpeciesCode %in% c("PAST"), "Porites.astreoides", if_else(Species$SpeciesCode %in% c("PCLI"), "Pseudodiploria.clivosa", if_else(Species$SpeciesCode %in% c("PFUR"), "Porites.furcata", if_else(Species$SpeciesCode %in% c("DLAB"), "Diploria.labyrinthiformis", if_else(Species$SpeciesCode %in% c("PPOR"), "Porites.porites",if_else(Species$SpeciesCode %in% c("PSTR"), "Pseudodiplorias.trigosa", if_else(Species$SpeciesCode %in% c("SBOU"), "Solenastrea.bournoni", if_else(Species$SpeciesCode %in% c("SCOL"), "Solymia.sp", if_else(Species$SpeciesCode %in% c("SCUB"), "Scolymia.cubensis", if_else(Species$SpeciesCode %in% c("SINT"), "Stephanocoenia.intersepta", if_else(Species$SpeciesCode %in% c("SRAD"), "Siderastrea.radians", if_else(Species$SpeciesCode %in% c("SSID"), "Siderastrea.siderea", if_else(Species$SpeciesCode %in% c("MYCE"), "Mycetophyllia.sp", ""))))))))))))))))))))))))))))))))))))))))))
head(Species)
SpeciesT<- Species[, colSums(Species !=0)>0]
SpeciesT
SpeciesT %>% group_by(Date, Location) %>%mutate(SiteTotal = sum(TotalObservations)) %>%     mutate(SpeciesPrevalence=TotalObservations/SiteTotal) %>% group_by(Date, Location) %>% arrange(desc(SpeciesPrevalence))
SpeciesT
SpeciesT %>% group_by(Date, Location) %>%mutate(SiteTotal = sum(TotalObservations)) %>%     mutate(SpeciesPrevalence=TotalObservations/SiteTotal) %>% group_by(Date, Location) %>% arrange(desc(SpeciesPrevalence))
SpeciesT %>% group_by(Date, Location) %>%mutate(SiteTotal = sum(TotalObservations)) %>%     mutate(SpeciesPrevalence=TotalObservations/SiteTotal) %>% group_by(Date, Location)
?mutate
SpeciesP <- SpeciesT %>% group_by(Date, Location) %>% mutate(SiteTotal = sum(TotalObservations)) %>%     mutate(SpeciesPrevalence=TotalObservations/SiteTotal) %>% group_by(Date, Location) %>% arrange(desc(SpeciesPrevalence))
SpeciesP
View(SpeciesP)
View(SpeciesP)
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
library(magrittr)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, stringr, gridExtra, ggpubr, Rmisc, FSA, rcompanion, RColorBrewer, dplyr, vegan, nparcomp, RVAideMemoire, MANOVA.RM, pairwiseAdonis, PMCMR, PMCMRplus, patchwork, plyr, gdata)
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
rd <- read.xls("../data/RovingDiverSurveys.xlsx", head = T, na.strings ="TMTC")
class(rd$Healthy)
head(rd)
rd$MonthYear = format(as.Date(as.Date(rd$Date), format = "%y/%m/%d"), "%m-%y")
rd$Date = as.Date(rd$Date)
class(rd$Date)
head(rd)
rd$County = if_else(rd$SiteCode %in% c("SEFL01", "SEFL02", "SEFL03", "SLR South", "SLR Central", "SLR Ledge", "SLR North"), "Martin",
if_else(rd$SiteCode %in% c("T328", "BC1", "FTL4"), "Broward", "Palm Beach"))
rd$Location= if_else(rd$SiteCode %in% c("SEFL01", "SEFL02", "SEFL03", "SLR South", "SLR Central", "SLR Ledge", "SLR North"), "SLR",
if_else(rd$SiteCode %in% c("T328", "BC1", "FTL4"), "PMP",
if_else(rd$SiteCode %in% c("SEFL04", "SEFL05", "SEFL06"), "JUP",
if_else(rd$SiteCode %in% c("SEFL08", "SEFL09", "SEFL10", "SEFL11", "SEFL12"), "WPB", ""))))
head(rd)
rd$TotalObservations <- rd$UK + rd$DS + rd$BB + rd$RB + rd$YB + rd$SCTLD + rd$WP + rd$WS + rd$P + rd$PB + rd$BL + rd$Healthy
head(rd)
rd.early <- filter(rd, Date < "2019-07-03") %>%
subset(SiteCode %in% c("SEFL01", "SEFL02", "SEFL04", "SEFL05", "SEFL06", "SEFL08", "SEFL11", "SEFL12", "SLR North", "SLR South", "SLR Central", "SLR Ledge", "BC1", "T328", "FTL4"))
head(rd.early)
tail(rd.early)
countyData <- rd.early %>% dplyr::select(c(SiteCode, County, MonthYear, SpeciesCode, SCTLD, TotalObservations)) %>% group_by(SiteCode,MonthYear,County) %>% summarise_if(is.integer, sum)
countyData
countyData$Prevalence = countyData$SCTLD/countyData$TotalObservations
head(countyData)
set.seed(999)
adonis(formula = Prevalence ~ County*MonthYear, data = countyData, method = "euclidian")
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
library(magrittr)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, stringr, gridExtra, ggpubr, Rmisc, FSA, rcompanion, RColorBrewer, dplyr, vegan, nparcomp, RVAideMemoire, MANOVA.RM, pairwiseAdonis, PMCMR, PMCMRplus, patchwork, plyr, gdata)
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
rd <- read.xls("../data/RovingDiverSurveys.xlsx", head = T, na.strings ="TMTC")
class(rd$Healthy)
head(rd)
rd$MonthYear = format(as.Date(as.Date(rd$Date), format = "%y/%m/%d"), "%m-%y")
rd$Date = as.Date(rd$Date)
class(rd$Date)
head(rd)
rd$County = if_else(rd$SiteCode %in% c("SEFL01", "SEFL02", "SEFL03", "SLR South", "SLR Central", "SLR Ledge", "SLR North"), "Martin",
if_else(rd$SiteCode %in% c("T328", "BC1", "FTL4"), "Broward", "Palm Beach"))
rd$Location= if_else(rd$SiteCode %in% c("SEFL01", "SEFL02", "SEFL03", "SLR South", "SLR Central", "SLR Ledge", "SLR North"), "SLR",
if_else(rd$SiteCode %in% c("T328", "BC1", "FTL4"), "PMP",
if_else(rd$SiteCode %in% c("SEFL04", "SEFL05", "SEFL06"), "JUP",
if_else(rd$SiteCode %in% c("SEFL08", "SEFL09", "SEFL10", "SEFL11", "SEFL12"), "WPB", ""))))
head(rd)
rd$TotalObservations <- rd$UK + rd$DS + rd$BB + rd$RB + rd$YB + rd$SCTLD + rd$WP + rd$WS + rd$P + rd$PB + rd$BL + rd$Healthy
head(rd)
rd.early <- rd
countyData <- rd.early %>% dplyr::select(c(SiteCode, County, MonthYear, SpeciesCode, SCTLD, TotalObservations)) %>% group_by(SiteCode,MonthYear,County) %>% summarise_if(is.integer, sum)
countyData
countyData$Prevalence = countyData$SCTLD/countyData$TotalObservations
head(countyData)
set.seed(999)
adonis(formula = Prevalence ~ County*MonthYear, data = countyData, method = "euclidian")
rd.early <- filter(rd, Date < "2019-07-03") %>%
subset(SiteCode %in% c("SEFL01", "SEFL02", "SEFL04", "SEFL05", "SEFL06", "SEFL08", "SEFL11", "SEFL12", "SLR North", "SLR South", "SLR Central", "SLR Ledge", "BC1", "T328", "FTL4"))
head(rd.early)
tail(rd.early)
View(rd.early)
